// <auto-generated />
using System;
using DesafioAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220420182557_PopulandoBanco")]
    partial class PopulandoBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("DesafioAPI.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Tecnologia")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Turma-1",
                            Tecnologia = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Turma-2",
                            Tecnologia = "Java"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Turma-3",
                            Tecnologia = "PHP"
                        });
                });

            modelBuilder.Entity("DesafioAPI.Models.Starter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Letra")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Starters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "11111111111",
                            Email = "allison@starter.com",
                            Foto = "padra.png",
                            Letra = "ALOR",
                            Nome = "Allison"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "22222222222",
                            Email = "clecio@starter.com",
                            Foto = "padra.png",
                            Letra = "CLCI",
                            Nome = "Clécio"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "33333333333",
                            Email = "ubiratan@starter.com",
                            Foto = "padra.png",
                            Letra = "UBRT",
                            Nome = "Ubiratan"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "44444444444",
                            Email = "joao@starter.com",
                            Foto = "padra.png",
                            Letra = "JOAO",
                            Nome = "João"
                        },
                        new
                        {
                            Id = 5,
                            Cpf = "55555555555",
                            Email = "Antonio@starter.com",
                            Foto = "padra.png",
                            Letra = "ANTN",
                            Nome = "Caio"
                        });
                });

            modelBuilder.Entity("DesafioAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("User")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin",
                            Role = "Admin",
                            Senha = "Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: '7oX8tkrORTyp1NW0V3PE_HycjI3JEyLTYoldK1y0Caw'.",
                            User = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "usuario@usuario",
                            Role = "Usuario",
                            Senha = "Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: '7oX8tkrORTyp1NW0V3PE_HycjI3JEyLTYoldK1y0Caw'.",
                            User = "Usuario"
                        });
                });

            modelBuilder.Entity("DesafioAPI.Models.Starter", b =>
                {
                    b.HasOne("DesafioAPI.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
